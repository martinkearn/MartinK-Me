@page "/articles/{articleWebPath}"
@inject IStorageService StorageService

<PageTitle>@article.Title</PageTitle>

<header class="p-md-5 mt-3 mt-md-0 header">
    <div class="container">
        <h1>@article.Title</h1>
        <p><i>@article.Published.ToLongDateString()</i></p>
        <p>@article.Description</p>
        <p><TagsList Categories="@article.Categories" /></p>        
        <p>This article was published at <a href="@article.GitHubUrl">GitHub</a>. It is open source and you can make edits, comments etc.</p>
    </div>
</header>

<div class=article-container>
    <div class="container">
        <p><a href="https://www.pulumi.com/">Pulumi</a> is an infrastructure-as-code (IaC) platform that facilitates deployment of cloud resources and applications using familiar programming languages such as C#, Typescript, Python and Go. Right now, Pulumi is probably the alternative to <a href="https://www.terraform.io/">Terraform</a> for cloud deployment.</p>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <a href="/articles" class="btn btn-secondary"><i class="fa fa-angle-double-left" aria-hidden="true"></i> See all articles</a>
            </div>
        </div>
    </div>
</div>

<div class="comment-container sequence-background-1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2>Got a comment?</h2>
                <p>All my articles are written and managed as Markdown files on <a href="https://github.com/martinkearn/Content/tree/master/Blogs"><i class="fa fa-github fa-lg" aria-hidden="true"></i> GitHub</a>.</p>
                <p>Please add an issue or submit a pull request if something is not right on this article or you have a comment.</p>
                <p>If you'd like to simply say "thanks", then please send me a <a href="https://twitter.com/MartinKearn"><i class="fa fa-twitter fa-lg" aria-hidden="true"></i></a>.</p>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string ArticleWebPath { get; set; }

    private Article article;

    protected override void OnInitialized()
    {
        article = StorageService.GetArticlesByProperty("WebPath", ArticleWebPath).FirstOrDefault();
        if (article == default)
        {
            throw new NullReferenceException($"No article with WebPath {ArticleWebPath}");
        }
    }
}